name: Build Knight-Light Java Server
run-name: "Build Knight-Light Java Server: ${{ github.event.head_commit.message }}"
on: [push, workflow_dispatch]

env:
  WORKFLOW_ENGINE_VERSION: v0.0.1-rc.4
  OUTPUT_DIR: ./artifacts
  WORKING_DIR: $GITHUB_WORKSPACE/java-server

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
          cache: maven
      - name: Build with Maven
        run: |
          cd java-server
          mvn clean install
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
          cache: maven
      - name: Test using Maven and Jacoco
        run: |
          cd java-server
          mvn clean test
  delivery:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      # TODO combine all delivery jobs into a single action
      - name: Build container image
        uses: CMS-Enterprise/batcave-workflow-engine/.github/actions/image-build@main
        with:
          path: ./java-server/
          # TODO: the dockerfile path should be relative to the context path
          dockerfile: ./java-server/Dockerfile
          # TODO: add support for mixed case to workflow-engine (i.e. we should force container image tags to lowercase)
          image_tag: cms-enterprise/batcave/knight-light-java-server:testing
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Scan container image
        uses: CMS-Enterprise/batcave-workflow-engine/.github/actions/image-scan@main
        with:
          image_tag: cms-enterprise/batcave/knight-light-java-server:testing
          output_dir: ./artifacts
          repo_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive image scan outputs
        uses: actions/upload-artifact@v4
        with:
          name: image-scan-results
          path: ./artifacts/*.json
          if-no-files-found: error
  sast-scan:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cms-enterprise/batcave/workflow-engine:v0.0.1-rc.4
    steps:
      - uses: actions/checkout@v4
      - shell: sh
        run: |-
          git config --global --add safe.directory /__w/batcave-knight-light/batcave-knight-light
          cd java-server
          mkdir -p .artifacts
          workflow-engine run code-scan --semgrep-experimental
  image-build:
    runs-on: ubuntu-latest
    needs: sast-scan
    container:
      image: ghcr.io/cms-enterprise/batcave/workflow-engine:v0.0.1-rc.4
    steps:
      - uses: actions/checkout@v4
      - shell: sh
        run: |-
          cd java-server
          workflow-engine run image-build --tag java-server-image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: ./java-server
          tags: java-server-image
          outputs: type=docker,dest=/tmp/myimage.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myimage
          path: /tmp/myimage.tar
  
  image-scan:
    runs-on: ubuntu-latest
    needs: image-build
    container:
      image: ghcr.io/cms-enterprise/batcave/workflow-engine:v0.0.1-rc.4
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: myimage
          path: /tmp
      - name: Load image
        run: |
          docker load --input /tmp/myimage.tar
          docker image ls -a          
      - shell: sh
        run: |-
          cd java-server
          docker image ls
          workflow-engine run image-scan --scan-image-target java-server-image

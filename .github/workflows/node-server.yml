name: Build Knight-Light NodeJS Server
run-name: "Build Knight-Light NodeJS Server: ${{ github.event.head_commit.message }}"
on: [push, workflow_dispatch]

env:
  WORKFLOW_ENGINE_VERSION: v0.0.1-rc.4
  OUTPUT_DIR: ./artifacts
  WORKING_DIR: $GITHUB_WORKSPACE/node-server

jobs:
 set-version:
    runs-on: ubuntu-latest
    outputs:
      WORKFLOW_ENGINE_VERSION: ${{ steps.output.outputs.WORKFLOW_ENGINE_VERSION }}
    steps:
      - id: output
        run: |
          echo "WORKFLOW_ENGINE_VERSION=${{ env.WORKFLOW_ENGINE_VERSION }}"
          echo "WORKFLOW_ENGINE_VERSION=${{ env.WORKFLOW_ENGINE_VERSION }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: |
          cd nodeJs-server
          npm ci
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Test with Node
        run: |
          cd nodeJs-server
          npm ci
          npm run test:unit
  sast:
    runs-on: ubuntu-latest
    needs: [set-version]
    container:
      image: ghcr.io/cms-enterprise/batcave/workflow-engine:${{ needs.set-version.outputs.WORKFLOW_ENGINE_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - shell: sh
        run: |-
          git config --global --add safe.directory /__w/batcave-knight-light/batcave-knight-light
          cd nodeJs-server
          mkdir -p .artifacts
          workflow-engine run code-scan --semgrep-experimental

  delivery:
    runs-on: ubuntu-latest
      needs: [set-version]
      container:
        image: ghcr.io/cms-enterprise/batcave/workflow-engine:${{ needs.set-version.outputs.WORKFLOW_ENGINE_VERSION }}
      steps:
        - uses: actions/checkout@v4
        - name: Image Build
          shell: sh
          run: |-
            cd nodeJs-server
            workflow-engine run image-build --tag node-server-image
        - name: Image Scan
          shell: sh
          run: |-
            cd nodeJs-server
            mkdir -p .artifacts
            workflow-engine run image-scan --artifact-directory .artifacts --scan-image-target node-server-image
            ls -la .artifacts
        - name: Image Publish
          shell: sh
          run: |- 
            cd nodeJs-server
            ls -la .artifacts
            workflow-engine run image-publish --bundle-directory .artifacts
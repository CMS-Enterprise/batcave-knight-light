name: Build Knight-Light Python Server
run-name: "Build Knight-Light Python Server: ${{ github.event.head_commit.message }}"
on: [push, workflow_dispatch]

env:
  WORKFLOW_ENGINE_VERSION: v0.0.1-rc.4
  OUTPUT_DIR: ./artifacts
  WORKING_DIR: $GITHUB_WORKSPACE/python-server

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Test with python
        run: |
          cd python-server
          pip install -r requirements.txt
          python -m coverage --version
          python -m coverage run -m pytest
          python -m coverage report
          python -m coverage xml
  set-version:
    runs-on: ubuntu-latest
    outputs:
      WORKFLOW_ENGINE_VERSION: ${{ steps.output.outputs.WORKFLOW_ENGINE_VERSION }}
    steps:
      - id: output
        run: |
          echo "WORKFLOW_ENGINE_VERSION=${{ env.WORKFLOW_ENGINE_VERSION }}"
          echo "WORKFLOW_ENGINE_VERSION=${{ env.WORKFLOW_ENGINE_VERSION }}" >> $GITHUB_OUTPUT

  sast: 
    runs-on: ubuntu-latest
    needs: [set-version]
    container:
      image: ghcr.io/cms-enterprise/batcave/workflow-engine:${{ needs.set-version.outputs.WORKFLOW_ENGINE_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - shell: sh
        run: |-
          git config --global --add safe.directory /__w/batcave-knight-light/batcave-knight-light
          cd python-server
          mkdir -p .artifacts
          workflow-engine run code-scan --semgrep-experimental
  delivery:
    runs-on: ubuntu-latest
    needs: [set-version]
    container:
      image: ghcr.io/cms-enterprise/batcave/workflow-engine:${{ needs.set-version.outputs.WORKFLOW_ENGINE_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - name: Image Build
        shell: sh
        run: |-
          cd python-server
          workflow-engine run image-build --tag python-server-image
      - name: Image Scan
        shell: sh
        run: |-
          cd python-server
          mkdir -p .artifacts
          workflow-engine run image-scan --artifact-directory .artifacts --scan-image-target python-server-image
          ls -la .artifacts
      - name: Image Publish
        shell: sh
        run: |- 
          cd python-server
          ls -la .artifacts
          workflow-engine run image-publish --bundle-directory .artifacts
      - uses: actions/upload-artifact@v4
        with: 
          name: gatecheck-bundle.tar.gz
          path: python-server/artifacts/gatecheck-bundle.tar.gz
  
  deploy:
    runs-on: ubuntu-latest
    needs: [set-version, delivery]
    container:
      image: ghcr.io/cms-enterprise/batcave/workflow-engine:${{ needs.set-version.outputs.WORKFLOW_ENGINE_VERSION }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: gatecheck-bundle.tar.gz
      - name: Gatecheck Validate
        shell: sh
        run: |-
          ls -la 
          workflow-engine run deploy --artifact-dir .
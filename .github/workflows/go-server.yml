name: Build Knight-Light Go Server
run-name: "Build Knight-Light Go Server: ${{ github.event.head_commit.message }}"
on: [push, workflow_dispatch]

env:
  WORKFLOW_ENGINE_VERSION: v0.0.1-rc.11
  OUTPUT_DIR: ./artifacts
  WORKING_DIR: $GITHUB_WORKSPACE/go-server

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      WORKFLOW_ENGINE_VERSION: ${{ steps.output.outputs.WORKFLOW_ENGINE_VERSION }}
    steps:
      - id: output
        run: |
          echo "WORKFLOW_ENGINE_VERSION=${{ env.WORKFLOW_ENGINE_VERSION }}"
          echo "WORKFLOW_ENGINE_VERSION=${{ env.WORKFLOW_ENGINE_VERSION }}" >> $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go 1.21.4
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.4'
      - name: Build with Go
        run: |
          cd go-server
          go mod tidy
          go build
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go 1.21.4
        uses: actions/setup-go@v4
        with:
          go-version: '1.21.4'
      - name: Test with Go
        run: |
          cd go-server
          go test ./... -v -short
  sast:
    runs-on: ubuntu-latest
    needs: [set-version]
    container:
      image: ghcr.io/cms-enterprise/batcave/workflow-engine:${{ needs.set-version.outputs.WORKFLOW_ENGINE_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - shell: sh
        run: |- 
          git config --global --add safe.directory /__w/batcave-knight-light/batcave-knight-light
          cd go-server
          mkdir -p artifacts
          workflow-engine run code-scan --semgrep-experimental

  delivery:
    runs-on: ubuntu-latest
    needs: [set-version]
    container:
      image: ghcr.io/cms-enterprise/batcave/workflow-engine:${{ needs.set-version.outputs.WORKFLOW_ENGINE_VERSION }}
    steps:
      - uses: actions/checkout@v4
      - name: Image Build
        shell: sh
        run: |-
          cd go-server
          workflow-engine run image-build -v --tag go-server-image
      - name: Image Scan
        shell: sh
        run: |-
          cd go-server
          mkdir -p artifacts
          workflow-engine run image-scan --tag go-server-image
          ls -la artifacts
      # - name: Image Publish
      #   shell: sh
      #   run: |-
      #     cd go-server
      #     ls -la artifacts
      #     workflow-engine run image-publish --tag go-server-image --bundle-tag go-server-image-bundle
      - uses: actions/upload-artifact@v4
        with: 
          name: gatecheck-bundle.tar.gz
          path: ./artifacts/gatecheck-bundle.tar.gz
          
  deploy:
    runs-on: ubuntu-latest
    needs: [set-version, delivery]
    container:
      image: ghcr.io/cms-enterprise/batcave/workflow-engine:${{ needs.set-version.outputs.WORKFLOW_ENGINE_VERSION }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: gatecheck-bundle.tar.gz
      - name: Check for passed artifact
        shell: sh
        run: |-
          ls -la 
          workflow-engine run deploy
              
stages:
  - sast
  - delivery
  - deploy

variables:
  TEMPLATE_VERSION: "main"

sast-pipeline:
  stage: sast
  variables:
    SCAN_GITLEAKS: "true"
    SCAN_SEMGREP: "true"
  trigger:
    strategy: depend
    include:
      - project: "devops-pipelines/pipeline-triggers"
        ref: ${TEMPLATE_VERSION}
        file: "sast.yaml"
  parallel:
    matrix:
      - APP_NAME: [ "ui", "go-server", "java-server", "node-server", "python-server" ]
        TARGET_DIRECTORY: ${APP_NAME}
        SEMGREP_RULES_ADD: "p/javascript p/golang"
        ARTIFACT_FOLDER: ".artifacts/${APP_NAME}"
        APP_IMAGE_SRC: ${BC_IMAGE_REPO}/${CI_PROJECT_PATH}/${APP_NAME}

delivery-pipeline:
  stage: delivery
  variables:
    FETCH_SAST_ARTIFACTS: "true"
    PUSH_LATEST: "true"
  trigger:
    strategy: depend
    include:
      - project: "devops-pipelines/pipeline-triggers"
        ref: ${TEMPLATE_VERSION}
        file: "delivery.yaml"
  parallel:
    matrix:
      - APP_NAME: [ "ui", "go-server", "java-server", "node-server", "python-server" ]
        TARGET_DOCKERFILE: ${APP_NAME}/Dockerfile
        TARGET_BUILD_DIR: ${APP_NAME}
        APP_IMAGE_SRC: ${BC_IMAGE_REPO}/${CI_PROJECT_PATH}/${APP_NAME}

deployment-pipeline:
  stage: deploy
  variables:
    FETCH_SAST_ARTIFACTS: "true"
    PUSH_LATEST: "true"
  trigger:
    strategy: depend
    include:
      - project: "devops-pipelines/pipeline-triggers"
        ref: ${TEMPLATE_VERSION}
        file: "deployment.yaml"
  parallel:
    matrix:
      - APP_NAME: [ "ui", "go-server", "java-server", "node-server", "python-server" ]
        TARGET_DOCKERFILE: ${APP_NAME}/Dockerfile
        TARGET_SERVICE: knight-light-${APP_NAME}
        APP_IMAGE_SRC: ${BC_IMAGE_REPO}/${CI_PROJECT_PATH}/${APP_NAME}
